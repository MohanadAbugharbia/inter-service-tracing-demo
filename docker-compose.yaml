services:

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  init:
    image: &tempoImage grafana/tempo:latest
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo.yaml:/etc/tempo.yaml
      - tempo-data:/var/tempo
    ports:
      - "127.0.0.1:3200:3200" # tempo
      - "127.0.0.1:4317:4317" # otlp grpc
    depends_on:
      - init

  # And put them in a Grafana Alloy pipeline...
  alloy:
    image: grafana/alloy:v1.3.1
    volumes:
      - ./config/config.alloy:/etc/alloy/config.alloy
    command:
      - run
      - /etc/alloy/config.alloy
      - --storage.path=/var/lib/alloy/data
      - --server.http.listen-addr=0.0.0.0:12345
    ports:
      - "127.0.0.1:12345:12345"
      - "127.0.0.1:4319:4319"
      - "127.0.0.1:4318:4318"
    depends_on:
      - tempo

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "127.0.0.1:9090:9090"

  grafana:
    image: grafana/grafana:12.0.0
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "127.0.0.1:3000:3000"

  api_1:
    build:
      context: ./api-1
      dockerfile: Dockerfile
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://alloy:4318
      OTEL_TRACES_EXPORTER: otlp
      API_API_2_BASE_URL: http://api_2:8000
    ports:
      - "127.0.0.1:8000:8000"

  api_2:
    build:
      context: ./api-2
      dockerfile: Dockerfile
    environment:
      OTEL_EXPORTER_OTLP_ENDPOINT: http://alloy:4318
      OTEL_TRACES_EXPORTER: otlp
    ports:
      - "127.0.0.1:8001:8000"

volumes:
  tempo-data: {}
